# Weather App

The Weather App shows the current temperature at the location of the phone.

## Project Structure

The app scripts can be found at: `Assets\Features`
The Test scripts can be found at:  `Assets\Tests`

### The architecture used follows the Service-Oriented Architecture pattern with having at the moment three services/features listed below:

### Features

1. **MainService**: `Assets\Features\Main\Services` 
It's a MonoBehaviour, applied to the MainService object in the Hierarchy. This service takes care of organizing the other services to perform the required business logic.

2. **Other services**: The rest of the services implement the IService interface. It has OnComplete and OnFail events and the StartService method. For services requiring StartService to take params, there is the IServiceWithParameters Interface.
    
- **WeatherLocationService**: `Assets\Features\GPSPosition\Service`
Takes care of fetching the GPS location of the phone. The asynchronous operations while initializing phone location service are handled with the async/await pattern. 
The service is initialized with its dependency ILocationService which wraps IWebRequest and the Unity's Input.Location
    
- **WeatherAPIService**: `Assets\Features\Features\WeatherAPI\Service`
Takes GPS location as an input and fetches the temperature for that location for the current day. The asynchronous web request operation is handled with async/await. UnityWebRequestAwaiter Extension method was created to help with awaiting UnityWebRequest.
The service is initialized with its dependency IWeatherService which is a composite interface that extends the IWeatherLocation and IWebRequest interfaces. The IWeatherLocation interface represents a geographical location. 
The IWebRequest interface represents a web request - sends a GET request to the specified URL of string type and returns the response string.

3. **Tests**: There is also `Assets\Tests` folder where can be found tests for some of the key behaviours. Tests implement NUnit Framework. To run the tests, go to Unity - Window - General - Test Runner.

4. **Build**: In `Assets\Build`, the WeatherApp.apk is included.

## Project Setup Notes

In order to set up the project using the Input for location fetching, please go to:
- Player settings - Other settings - Configuration - Active Input Handling - please select Both
- Player settings - Other settings - Configuration - Low Accuracy Location - please check it

## Project Install

Tested with Unity 2021.3.16f1, supports Unity 2019 onwards.

Steps to set up the project locally:
1. Create a new Unity project (recommended using the 2D mobile template).
2. Install the package AndroidToast from the git link below:
    - [AndroidToast](https://github.com/venellinus1/androidtoast.git)
3. Download the project assets folder from:
    - [WeatherApp_Assets](https://github.com/venellinus1/WeatherApp_Assets)
4. Place the downloaded content into your project's Assets folder.
5. Open the Scene "SampleScene" from `Assets/Scenes` folder.
